---
- name: Template out Bitwarden Service
  ansible.builtin.template:
    src: bitwarden.service.j2
    dest: "/etc/systemd/system/bitwarden.service"
    force: true
    mode: '0644'  # Ansible-Lint hates when this isn't set

- name: Add overwrite_certs.sh
  ansible.builtin.template:
    src: overwrite_certs.sh.j2
    dest: "/etc/step-ca/overwrite_certs.sh"
    force: true
    mode: '0700'  # Ansible-Lint hates when this isn't set
    owner: "{{ service_user }}"
    group: "{{ service_user }}"

- name: Copy initial cert to appropriate directory
  ansible.builtin.copy:
    src:  "/etc/step-ca/{{ external_domain }}.crt"
    dest: "{{ bitwarden_dir }}/bwdata/ssl/{{ external_domain }}/certificate.crt"
    remote_src: true
    force: true
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: "0700"

- name: Copy initial key to appropriate directory
  ansible.builtin.copy:
    src:  "/etc/step-ca/{{ external_domain }}.key"
    dest: "{{ bitwarden_dir }}/bwdata/ssl/{{ external_domain }}/private.key"
    remote_src: true
    force: true
    owner: "{{ service_user }}"
    group: "{{ service_user }}"
    mode: "0700"

- name: Make override directory
  ansible.builtin.file:
    path: "{{ cert_renewer_path }}"
    state: directory
    mode: '0755'

- name: Deploy Bitwarden override
  ansible.builtin.template:
    src: cert-renewer.bitwarden.override.j2
    dest: "{{ cert_renewer_path }}/override.conf"
    force: true
    mode: '0770'  # Ansible-Lint hates when this isn't set

- name: Rebuild Bitwarden with new configuration
  become_user: "{{ service_user }}"
  ansible.builtin.command:
    cmd: "./bitwarden.sh rebuild"
    chdir: "{{ bitwarden_dir }}"
  changed_when: false

- name: Ensure cert-renewer@bitwarden.timer is started
  ansible.builtin.service:
    name: cert-renewer@bitwarden.timer
    state: started
    enabled: true

- name: Ensure bitwarden is restarted
  ansible.builtin.service:
    name: bitwarden
    state: restarted
    enabled: true
